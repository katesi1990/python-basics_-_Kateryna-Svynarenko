'''1. Реализовать функцию, принимающую два числа (позиционные аргументы) и
выполняющую их деление. Числа запрашивать у пользователя, предусмотреть
обработку ситуации деления на ноль.'''

a1 = int(input("Введите число1:"))
a2 = int(input("Введите число2:"))

def my_divide(a1, a2):
    try:
        print(a1 / a2)
    except ZeroDivisionError:
        print('Делить на ноль нельзя!')

my_divide(a1, a2)

'''2. Выполнить функцию, которая принимает несколько параметров, описывающих 
данные пользователя: имя, фамилия, год рождения, город проживания, email, 
телефон. Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.'''

def user_data (f_name, l_name, birth_y, city, email, phone):
    print (f"First name: {f_name}, Last name: {l_name}, Year of birth: "
           f"{birth_y}, City: {city}, email: {email}, phone number: {phone}")

user_data(f_name = 'Kateryna', l_name = 'Svynarenko', birth_y = '1990',
          city = 'Shanghai', email = 'asdcf@mail.ru', phone = '13818273872')

'''3. Реализовать функцию my_func(), которая принимает три позиционных 
аргумента и возвращает сумму наибольших двух аргументов.'''

def my_func1(b1, b2, b3):
    listb = [b1, b2, b3]
    listb_sorted = sorted(listb, reverse=True)

    return listb_sorted[0] + listb_sorted[1]

print(my_func1(7, 3, 15))

'''4. Программа принимает действительное положительное число x и целое 
отрицательное число y. Выполните возведение числа x в степень y. Задание 
реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись 
без встроенной функции возведения числа в степень. Подсказка: попробуйте 
решить задачу двумя способами. Первый — возведение в степень с помощью 
оператора **. Второй — более сложная реализация без оператора **, 
предусматривающая использование цикла.'''

# x - действительное положительное число
# y - целое отрицательное число

# Способ 1:
def my_func2(x: int, y: int):
    return(x**y)

print(my_func2(3, -4))

# Способ 2:
def my_func3(x: int, y:int):
    c = 1 / x
    if y < 0:
        for i in range(1, abs(y)-1):
            c *= c
        return(c)
    else:
        return("переменная 'y' должна быть отрицательным числом!")

print(my_func3(3, -2))

'''5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может 
продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма 
вновь введённых чисел будет добавляться к уже подсчитанной сумме. Но если 
вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введён после нескольких чисел, то вначале нужно 
добавить сумму этих чисел к полученной ранее сумме и после этого завершить 
программу.'''

def input_sum(*nums):
    nums = input("Введите ряд чисел через пробел: ").split()
    sum_nums = 0
    try:
        for n in nums:
            sum_nums += int(n)
    except ValueError:
        print("Ошибка! Можно вводить только числа. Попробуйте еще раз")
    print(sum_nums)

input_sum()

print(input_sum())
'''6. Реализовать функцию int_func(), принимающую слова из маленьких 
латинских букв и возвращающую их же, но с прописной первой буквой. Например, 
print(int_func(‘text’)) -> Text.'''

def int_func(word: str):
    return(word.title())

print(int_func('klldh'))

'''7. Продолжить работу над заданием. В программу должна попадать строка из 
слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем 
регистре. Нужно сделать вывод исходной строки, но каждое слово должно 
начинаться с заглавной буквы. Используйте написанную ранее функцию int_func(
).'''

def int_func(*words):
    words = input("Введите слова из латинких букв через пробел: ")
    return(words.title())

print(int_func())